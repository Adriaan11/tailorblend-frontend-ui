@using BlazorConsultant.Models

<div class="tb-profile-section">
    <TbExpansionPanel
        Icon="user"
        Title="Your Profile"
        Subtitle="Optional - helps AI skip information-gathering questions"
        IsOpen="true">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <!-- Section 1: Core Identity -->
            <div class="col-span-full">
                <TbText Typo="subtitle2" Style="font-weight: 600; margin-bottom: 0.5rem;">
                    Basic Information
                </TbText>
            </div>

            <TbTextField @bind-Value="Profile.FirstName"
                         Label="First Name" />
            <TbTextField @bind-Value="Profile.Surname"
                         Label="Surname" />
            <TbTextField @bind-Value="Profile.Email"
                         Label="Email"
                         InputType="email" />

            <!-- Section 2: Demographics -->
            <div class="col-span-full">
                <TbText Typo="subtitle2" Style="font-weight: 600; margin-bottom: 0.5rem;">
                    Demographics (for accurate dosing)
                </TbText>
            </div>

            <TbNumericField @bind-IntValue="Profile.Age"
                            Label="Age"
                            MinStr="1"
                            MaxStr="120" />
            <TbSelect @bind-Value="Profile.BiologicalSex"
                      Label="Biological Sex"
                      Options="@_biologicalSexOptions"
                      Clearable="true" />
            <TbNumericField @bind-IntValue="Profile.HeightCm"
                            Label="Height (cm)"
                            MinStr="50"
                            MaxStr="250" />
            <TbNumericField @bind-IntValue="Profile.WeightKg"
                            Label="Weight (kg)"
                            MinStr="20"
                            MaxStr="300" />

            <!-- Section 3: Safety Information (CRITICAL) -->
            <div class="col-span-full flex items-center gap-2">
                <TbIcon Icon="shield-heart" Size="lg" Color="accent" />
                <TbText Typo="subtitle2" Style="font-weight: 600;">
                    Safety Information (Important!)
                </TbText>
            </div>

            <div class="col-span-full md:col-span-1">
                <TbTextField @bind-Value="Profile.CurrentMedications"
                             Label="Current Medications"
                             Lines="2"
                             HelperText="List any medications you're taking" />
            </div>
            <div class="col-span-full md:col-span-1">
                <TbTextField @bind-Value="Profile.KnownAllergies"
                             Label="Known Allergies"
                             Lines="2"
                             HelperText="List any known allergies" />
            </div>

            <div class="col-span-full">
                <TbTextField @bind-Value="Profile.HealthConditions"
                             Label="Chronic Health Conditions"
                             Lines="2"
                             HelperText="e.g., diabetes, hypertension, thyroid issues" />
            </div>

            <!-- Section 4: Lifestyle Factors -->
            <div class="col-span-full">
                <TbText Typo="subtitle2" Style="font-weight: 600; margin-bottom: 0.5rem;">
                    Lifestyle & Diet
                </TbText>
            </div>

            <TbSelect @bind-Value="Profile.DietType"
                      Label="Diet Type"
                      Options="@_dietTypeOptions"
                      Clearable="true" />
            <TbSelect @bind-Value="Profile.ActivityLevel"
                      Label="Activity Level"
                      Options="@_activityLevelOptions"
                      Clearable="true" />

            <!-- Section 5: Habits -->
            <div class="col-span-full">
                <TbText Typo="subtitle2" Style="font-weight: 600; margin-bottom: 0.5rem;">
                    Habits & Sleep
                </TbText>
            </div>

            <TbSelect @bind-Value="Profile.SmokingStatus"
                      Label="Smoking Status"
                      Options="@_smokingStatusOptions"
                      Clearable="true" />
            <TbSelect @bind-Value="Profile.AlcoholConsumption"
                      Label="Alcohol Consumption"
                      Options="@_alcoholConsumptionOptions"
                      Clearable="true" />

            <TbNumericField @bind-DecimalValue="Profile.AverageSleepHours"
                            Label="Average Sleep (hours/night)"
                            Step="0.5"
                            MinStr="0"
                            MaxStr="24" />
            <TbSelect @bind-Value="Profile.CaffeineIntake"
                      Label="Caffeine Intake"
                      Options="@_caffeineIntakeOptions"
                      Clearable="true" />

            <!-- Section 6: Preferences -->
            <div class="col-span-full">
                <TbText Typo="subtitle2" Style="font-weight: 600; margin-bottom: 0.5rem;">
                    Preferences
                </TbText>
            </div>

            <div class="col-span-full">
                <TbSelect @bind-Value="Profile.PreferredBaseType"
                          Label="Preferred Base Type"
                          Options="@_preferredBaseTypeOptions"
                          Clearable="true"
                          HelperText="What format do you prefer?" />
            </div>

            <!-- Action Buttons -->
            <div class="col-span-full flex gap-2 justify-end">
                <TbButton Variant="text"
                          @onclick="ClearProfile"
                          Disabled="@(!Profile.HasAnyData())">
                    Clear All
                </TbButton>
                <TbButton Variant="filled"
                          Color="primary"
                          @onclick="SaveProfile"
                          Disabled="@(!Profile.HasAnyData())"
                          StartIcon="floppy-disk">
                    Save Profile
                </TbButton>
            </div>
        </div>
    </TbExpansionPanel>
</div>

@code {
    /// <summary>
    /// The user profile data (bound from parent component)
    /// </summary>
    [Parameter]
    public UserProfile Profile { get; set; } = new();

    /// <summary>
    /// Event callback when profile is saved
    /// </summary>
    [Parameter]
    public EventCallback<UserProfile> OnProfileChanged { get; set; }

    // Option lists for select dropdowns
    private List<string> _biologicalSexOptions = new() { "Male", "Female", "Other" };

    private List<string> _dietTypeOptions = new()
    {
        "Omnivore", "Vegetarian", "Vegan", "Keto", "High Protein", "Paleo", "Other"
    };

    private List<string> _activityLevelOptions = new()
    {
        "Sedentary", "Light Activity", "Moderate Exercise", "Very Active", "Athlete"
    };

    private List<string> _smokingStatusOptions = new()
    {
        "Non-smoker", "Occasional", "Daily"
    };

    private List<string> _alcoholConsumptionOptions = new()
    {
        "None", "Occasional (1-2x/week)", "Moderate (3-5x/week)", "Heavy (Daily)"
    };

    private List<string> _caffeineIntakeOptions = new()
    {
        "None", "1-2 cups/day", "3-5 cups/day", "6+ cups/day"
    };

    private List<string> _preferredBaseTypeOptions = new()
    {
        "Drink (zero calorie)", "Shake (Whey)", "Shake (Vegan)"
    };

    /// <summary>
    /// Save profile and notify parent component
    /// </summary>
    private async Task SaveProfile()
    {
        Console.WriteLine($"‚úÖ [UserProfile] Profile saved with {CountFilledFields()} fields filled");
        await OnProfileChanged.InvokeAsync(Profile);
    }

    /// <summary>
    /// Clear all profile fields
    /// </summary>
    private void ClearProfile()
    {
        Profile.Clear();
        Console.WriteLine($"üóëÔ∏è [UserProfile] Profile cleared");
        StateHasChanged();
    }

    /// <summary>
    /// Count how many fields are filled (for logging)
    /// </summary>
    private int CountFilledFields()
    {
        int count = 0;
        if (!string.IsNullOrWhiteSpace(Profile.FirstName)) count++;
        if (!string.IsNullOrWhiteSpace(Profile.Surname)) count++;
        if (!string.IsNullOrWhiteSpace(Profile.Email)) count++;
        if (Profile.Age.HasValue) count++;
        if (!string.IsNullOrWhiteSpace(Profile.BiologicalSex)) count++;
        if (Profile.HeightCm.HasValue) count++;
        if (Profile.WeightKg.HasValue) count++;
        if (!string.IsNullOrWhiteSpace(Profile.CurrentMedications)) count++;
        if (!string.IsNullOrWhiteSpace(Profile.KnownAllergies)) count++;
        if (!string.IsNullOrWhiteSpace(Profile.HealthConditions)) count++;
        if (!string.IsNullOrWhiteSpace(Profile.DietType)) count++;
        if (!string.IsNullOrWhiteSpace(Profile.ActivityLevel)) count++;
        if (!string.IsNullOrWhiteSpace(Profile.SmokingStatus)) count++;
        if (!string.IsNullOrWhiteSpace(Profile.AlcoholConsumption)) count++;
        if (Profile.AverageSleepHours.HasValue) count++;
        if (!string.IsNullOrWhiteSpace(Profile.CaffeineIntake)) count++;
        if (!string.IsNullOrWhiteSpace(Profile.PreferredBaseType)) count++;
        return count;
    }
}
